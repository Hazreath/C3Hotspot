<?php
	 libxml_disable_entity_loader(false);
	 
	error_reporting(E_ALL);
	 
	function soapCall() {
		// PARAMS
		 $url = "http://192.168.2.141/Auth.aspx";
		 //~ $params = array('login' => 'c3rb',
				 //~ 'mdp' => '@dmcas',
		 //~ );
		 //~ $login = "93448000000306";
		 //~ $mdp = "20061960";
		 //~ $login = "c3rb";
		 //~ $pass = "@dmspot";
		 //~ $login="1315100030";
		 //~ $pass="20061960";
		 
		 $login = "Lesieur";
		 $mdp="93448000000801";
		 
		 $params = array(
				"login" => $login,
				"mdp" => $mdp);
		
		 $function = "Auth";
		 $namespace = "http://orphee/wsCAS/".$function;
		 $soapVersion = SOAP_1_2;
		 $header = 'Content-Type : application/soap+xml, charset:utf-8';
		 
		
		 // DÃ©sactiver ssl
		 $context = stream_context_create(array(
			'ssl' => array(
			'verify_peer' => false,
			'verify_peer_name' => false,
			'allow_self_signed' => true,
			
		)));
		
		
		try {
			$client = new SoapClient(null,array(
			'soap_version' => $soapVersion,
			'location' => $url,
			'uri' => $namespace,
			'trace' => true,
			"exceptions" => true,
			
			"stream_context" => stream_context_create(array(
				"http" => array(
					'header' => $header,
					'user-agent'=>'PHPSoapClient'
						)
					)	
				)
			));
			//$client->auth_CAS($login,$mdp);
		} catch (Exception $e) {
			echo '<p>error client</p>';
			var_dump($client);
		}
		
		
		
		// Appel webservice
		//$result = 'lel';
		
		try {
			
			$result = $client->__soapCall($function,
				$params,array(
					'soapaction' => $function,
					'uri' => $namespace
				));
			//$result=$client->auth_CAS($params["login"],$params["mdp"]);
				
			
		} catch (Exception $e) {
			echo '<p>ERROR : '.$client->__getLastRequest().'</p>';
			echo '<p>REQUEST_H : '.$client->__getLastRequestHeaders().'</p>';
			echo '<p>REPONSE : '.$client->__getLastResponse().'</p>';
			echo '<p>HEADERS : '.$client->__getLastResponseHeaders().'</p>';
			//echo '<p>$client : '.$client.'</p>';
			
			//wtf($client);
			var_dump($client);
		} finally {
			echo $result;
		}
		
	}
		
	// phpinfo();
	 soapCall();
	 
	//echo "<html><body><h1>lel</h1></body></html>";
     
     /** debug */
     function console_log( $data ){
	  echo '<script>';
	  echo 'console.log('. json_encode( $data ) .')';
	  echo '</script>';
     }
     
     function wtf(){
  error_reporting(E_ALL);
  $args = func_get_args();
  $backtrace = debug_backtrace();
  $file = file($backtrace[0]['file']);
  $src  = $file[$backtrace[0]['line']-1];  // select debug($varname) line where it has been called
  $pat  = '#(.*)'.__FUNCTION__.' *?\( *?\$(.*) *?\)(.*)#i';  // search pattern for wtf(parameter)
  $arguments  = trim(preg_replace($pat, '$2', $src));  // extract arguments pattern
  $args_arr = array_map('trim', explode(',', $arguments));

  print '<style>
  div.debug {visible; clear: both; display: table; width: 100%; font-family: Courier,monospace; border: medium solid red; background-color: yellow; border-spacing: 5px; z-index: 999;}
  div.debug > div {display: unset; margin: 5px; border-spacing: 5px; padding: 5px;}
  div.debug .cell {display: inline-flex; padding: 5px; white-space: pre-wrap;}
  div.debug .left-cell {float: left; background-color: Violet;}
  div.debug .array {color: RebeccaPurple; background-color: Violet;}
  div.debug .object pre {color: DodgerBlue; background-color: PowderBlue;}
  div.debug .variable pre {color: RebeccaPurple; background-color: LightGoldenRodYellow;}
  div.debug pre {white-space: pre-wrap;}
  </style>'.PHP_EOL;
  print '<div class="debug">'.PHP_EOL;
  foreach ($args as $key => $arg) {
    print '<div><div class="left-cell cell"><b>';
    array_walk(debug_backtrace(),create_function('$a,$b','print "{$a[\'function\']}()(".basename($a[\'file\']).":{$a[\'line\']})<br> ";'));
    print '</b></div>'.PHP_EOL;
    if (is_array($arg)) {
      print '<div class="cell array"><b>'.$args_arr[$key].' = </b>';
      print_r(htmlspecialchars(print_r($arg)), ENT_COMPAT, 'UTF-8');
      print '</div>'.PHP_EOL;
    } elseif (is_object($arg)) {
      print '<div class="cell object"><pre><b>'.$args_arr[$key].' = </b>';
      print_r(htmlspecialchars(print_r(var_dump($arg))), ENT_COMPAT, 'UTF-8');
      print '</pre></div>'.PHP_EOL;
    } else {
      print '<div class="cell variable"><pre><b>'.$args_arr[$key].' = </b>&gt;';
      print_r(htmlspecialchars($arg, ENT_COMPAT, 'UTF-8').'&lt;');
      print '</pre></div>'.PHP_EOL;
    }
    print '</div>'.PHP_EOL;
  }
  print '</div>'.PHP_EOL;
}
?>

